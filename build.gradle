buildscript {
	repositories {
		maven {url "https://maven.google.com"}
		maven {url "https://jcenter.bintray.com"}
	}
	
	dependencies {
		classpath 'com.android.tools.build:gradle:2.3.0'
		classpath 'com.github.ksoichiro:gradle-eclipse-aar-plugin:+'
	}
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.ksoichiro.eclipse.aar'

repositories {
	maven {url "https://maven.google.com"}
	maven {url "https://jcenter.bintray.com"}
}

eclipseAar {
	androidTarget = 'android-27'
	aarDependenciesDir = 'aarDependencies'
	cleanLibsDirectoryEnabled = false
	andmore = true
}

android {
	compileSdkVersion 27
	buildToolsVersion '25.0.0'
	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			resources.srcDirs = ['src']
			aidl.srcDirs = ['src']
			renderscript.srcDirs = ['src']
			res.srcDirs = ['res']
			assets.srcDirs = ['assets']
			jniLibs {
				srcDir 'libs'
			}
		}
		
		instrumentTest.setRoot('tests')
		debug.setRoot('build-types/debug')
		release.setRoot('build-types/release')
	}
	
	dexOptions {
		preDexLibraries = false
	}
	
	lintOptions {
		checkReleaseBuilds false
		abortOnError false
	}
	
	buildTypes {
		release {
			//minifyEnabled true
			//proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
		}
	}
}

dependencies {
	compile fileTree(dir: 'mcoreLibs', include: '*.jar')
}

import org.apache.tools.ant.taskdefs.condition.Os

task  AppRunDebug (type: Exec, dependsOn: 'installDebug') {
	if (Os.isFamily(Os.FAMILY_WINDOWS)) {
		commandLine 'cmd', '/c', android.getAdbExe().toString(), 'shell', 'am', 'start', '-n', 'lnc.idccon/.Startup'
	}
	else if (Os.isFamily(Os.FAMILY_MAC)) {
		commandLine android.getAdbExe().toString(), "shell", 'am', 'start', '-n', 'lnc.idccon/.Startup'
	}
}

